let auth0Client=null;const fetchAuthConfig=()=>fetch("/auth_config.json"),configureClient=async()=>{const a=await fetchAuthConfig(),b=await a.json();auth0Client=await auth0.createAuth0Client({domain:b.domain,clientId:b.clientId})},query=window.location.search,shouldParseResult=query.includes("code=")&&query.includes("state="),requireAuth=async(a,b)=>{const c=await auth0Client.isAuthenticated();return c?a():login(b)};document.addEventListener("DOMContentLoaded",async function(){await configureClient();const a=await auth0Client.isAuthenticated();if(a)return window.history.replaceState({},document.title,window.location.pathname),void updateUI();if(shouldParseResult){const a=await auth0Client.handleRedirectCallback();a.appState&&a.appState.targetUrl&&updateUI(),window.history.replaceState({},document.title,"/")}});const updateUI=async()=>{if(!auth0Client)return void setTimeout(()=>updateUI(),1e3);const a=await auth0Client.isAuthenticated(),b=document.getElementById("btn-logout"),c=document.getElementById("btn-login");b&&c&&(b.disabled=!a,c.disabled=a,c.onclick=function(){login()},b.onclick=function(){logout()});const d=document.getElementById("gated-content"),e=document.getElementById("ipt-access-token"),f=document.getElementById("ipt-user-profile");d&&e&&f&&(a?(d.classList.remove("hidden"),e.innerHTML=await auth0Client.getTokenSilently(),f.textContent=JSON.stringify(await auth0Client.getUser())):d.classList.add("hidden"))},login=async a=>{try{const b={authorizationParams:{redirect_uri:window.location.origin}};a&&(b.appState={targetUrl:a}),await auth0Client.loginWithRedirect(b)}catch(a){console.log("Log in failed",a)}},logout=async()=>{try{await auth0Client.logout({logoutParams:{returnTo:window.location.origin}})}catch(a){console.log("Log out failed",a)}};